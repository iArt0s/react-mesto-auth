{"ast":null,"code":"var _jsxFileName = \"/Users/arthem/Documents/projects/Yandex/dev/react-mesto/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { useEffect, useState } from \"react\";\nimport { api } from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({\n    name: \"\",\n    link: \"\"\n  });\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState('');\n  useEffect(() => {\n    api.getInitialCards().then(data => {\n      setCards(data);\n    });\n    api.loadUser().then(data => {\n      setCurrentUser(data);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(likes => likes._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(removedCard) {\n    api.removeCard(removedCard._id).then(() => {\n      const newArr = cards.filter(card => card._id !== removedCard._id);\n      setCards(newArr);\n    });\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({\n      name: \"\",\n      link: \"\"\n    });\n  }\n\n  function handleCardClick(cardData) {\n    setSelectedCard(cardData);\n  }\n\n  function handleUpdateUser(formData) {\n    api.updateUserInfo(formData).then(formData => {\n      setCurrentUser(formData);\n    });\n    closeAllPopups();\n  }\n\n  function handleUpdateAvatar(formData) {\n    api.updateAvatar(formData).then(formData => {\n      setCurrentUser(formData);\n    });\n    closeAllPopups();\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    api.addCard(newCard).then(newCard => {\n      setCards([newCard, ...cards]);\n    });\n    closeAllPopups();\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Main, {\n        cards: cards,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n      name: \"popup_delete\",\n      title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n      button: \"\\u0414\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n      card: selectedCard,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3o/9YOHAy5zPWmQGd0ey3zjdbyM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/arthem/Documents/projects/Yandex/dev/react-mesto/src/components/App.js"],"names":["Header","Main","Footer","PopupWithForm","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","useEffect","useState","api","CurrentUserContext","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","name","link","cards","setCards","currentUser","setCurrentUser","getInitialCards","then","data","loadUser","handleCardLike","card","isLiked","likes","some","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","removedCard","removeCard","newArr","filter","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","handleCardClick","cardData","handleUpdateUser","formData","updateUserInfo","handleUpdateAvatar","updateAvatar","handleAddPlaceSubmit","addCard"],"mappings":"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","sourcesContent":["import Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { useEffect, useState } from \"react\";\n\nimport { api } from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({ name: \"\", link: \"\" });\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState('');\n\n  useEffect(() => {\n    api\n        .getInitialCards()\n        .then((data) => {\n          setCards(data);\n        })\n    api\n        .loadUser()\n        .then((data) => {\n          setCurrentUser(data);\n        })\n\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((likes) => likes._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(removedCard) {\n    api.removeCard(removedCard._id).then(() => {\n      const newArr = cards.filter(card => card._id !== removedCard._id);\n      setCards(newArr);\n    })\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({ name: \"\", link: \"\" });\n  }\n\n  function handleCardClick(cardData) {\n    setSelectedCard(cardData)\n  }\n\n  function handleUpdateUser(formData) {\n    api\n      .updateUserInfo(formData)\n      .then((formData) => {\n        setCurrentUser(formData);\n      })\n    closeAllPopups();\n  }\n  function handleUpdateAvatar(formData) {\n    api\n      .updateAvatar(formData)\n      .then((formData) => {\n        setCurrentUser(formData);\n      })\n    closeAllPopups();\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    api.addCard(newCard).then((newCard) => {\n      setCards([newCard, ...cards]);\n    })\n    closeAllPopups();\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <CurrentUserContext.Provider value={currentUser}>\n        <Main\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n        />\n        <Footer />\n        <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n        />\n        <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n        />\n      </CurrentUserContext.Provider>\n      \n      <PopupWithForm name=\"popup_delete\" title=\"Вы уверены?\" button=\"Да\" />\n\n\n      <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}