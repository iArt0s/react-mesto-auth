{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co/';\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\nexport const authorize = ({\n  password,\n  email\n}) => {\n  return fetch(`${BASE_URL}signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }).then(data => data);\n};","map":{"version":3,"sources":["/Users/arthem/Documents/projects/Yandex/dev/react-mesto-auth/src/utils/auth.js"],"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","status","authorize","getContent","token","data"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,gCAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAOC,KAAK,CAAE,GAAEJ,QAAS,QAAb,EAAsB;AAC9BK,IAAAA,MAAM,EAAE,MADsB;AAE9BC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFqB;AAM9BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,MAAAA,QAAF;AAAYD,MAAAA;AAAZ,KAAf;AANwB,GAAtB,CAAL,CAQFQ,IARE,CAQGC,GAAG,IAAI;AACT,QAAIA,GAAG,CAACC,EAAR,EAAY;AACR,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACH,GAbE,CAAP;AAcH,CAfM;AAiBP,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEd,EAAAA,QAAF;AAAYD,EAAAA;AAAZ,CAAD,KAAyB;AAC9C,SAAOE,KAAK,CAAE,GAAEJ,QAAS,QAAb,EAAsB;AAC9BK,IAAAA,MAAM,EAAE,MADsB;AAE9BC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFqB;AAM9BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,MAAAA,QAAF;AAAYD,MAAAA;AAAZ,KAAf;AANwB,GAAtB,CAAL,CAQFQ,IARE,CAQGC,GAAG,IAAI;AACT,QAAIA,GAAG,CAACC,EAAR,EAAY;AACR,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACH,GAbE,CAAP;AAcH,CAfM;AAiBP,OAAO,MAAME,UAAU,GAAIC,KAAD,IAAW;AACjC,SAAOf,KAAK,CAAE,GAAEJ,QAAS,UAAb,EAAwB;AAChCK,IAAAA,MAAM,EAAE,KADwB;AAEhCC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB,kBAFX;AAGL,uBAAkB,UAASa,KAAM;AAH5B;AAFuB,GAAxB,CAAL,CAQFT,IARE,CAQGC,GAAG,IAAI;AACT,QAAIA,GAAG,CAACC,EAAR,EAAY;AACR,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACH,GAbE,EAcFN,IAdE,CAcGU,IAAI,IAAIA,IAdX,CAAP;AAeH,CAhBM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co/';\n\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}signup`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ password, email })\n    })\n        .then(res => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        });\n}\n\nexport const authorize = ({ password, email }) => {\n    return fetch(`${BASE_URL}signin`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ password, email })\n    })\n        .then(res => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n}\n\nexport const getContent = (token) => {\n    return fetch(`${BASE_URL}users/me`, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        }\n    })\n        .then(res => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n        .then(data => data)\n}\n"]},"metadata":{},"sourceType":"module"}